[
{
  "id": 1,
  "question": "Oracle SQL에서 테이블의 모든 열을 선택하는 명령어는?",
  "options": ["SELECT *", "SELECT ALL", "CHOOSE *", "GET *"],
  "correctAnswer": 0,
  "hint": "SELECT 명령어 뒤에 모든 열을 의미하는 기호를 붙입니다. 이 기호는 별표(*)입니다.",
  "difficulty": "easy",
  "category": "기본 문법"
},
{
  "id": 2,
  "question": "새로운 행을 테이블에 삽입하는 SQL 명령어는?",
  "options": ["ADD", "INSERT", "APPEND", "NEW"],
  "correctAnswer": 1,
  "hint": "INSERT INTO 테이블명 VALUES(...) 형식으로 사용됩니다.",
  "difficulty": "easy",
  "category": "데이터 조작"
},
{
  "id": 3,
  "question": "SQL에서 중복된 행을 제거하는 데 사용되는 키워드는?",
  "options": ["DISTINCT", "UNIQUE", "FILTER", "REMOVE"],
  "correctAnswer": 0,
  "hint": "SELECT 명령어 뒤에 사용되며, 중복된 값을 제거하고 고유한 값을 반환합니다.",
  "difficulty": "easy",
  "category": "데이터 조회"
},
{
  "id": 4,
  "question": "데이터베이스 객체를 제거하는 SQL 명령어는?",
  "options": ["DELETE", "REMOVE", "DROP", "ERASE"],
  "correctAnswer": 2,
  "hint": "DROP TABLE 테이블명 형식으로 사용됩니다.",
  "difficulty": "easy",
  "category": "데이터 정의"
},
{
  "id": 5,
  "question": "SQL에서 조건에 맞는 행만 선택하는 데 사용되는 절은?",
  "options": ["WHERE", "IF", "CONDITION", "FILTER"],
  "correctAnswer": 0,
  "hint": "SELECT ... FROM 테이블명 WHERE 조건 형식으로 사용됩니다.",
  "difficulty": "easy",
  "category": "데이터 조회"
},
{
  "id": 6,
  "question": "SQL에서 두 개 이상의 테이블을 결합하는 데 사용되는 절은?",
  "options": ["COMBINE", "JOIN", "MERGE", "CONNECT"],
  "correctAnswer": 1,
  "hint": "테이블을 결합할 때 사용되며, INNER JOIN, LEFT JOIN 등의 형태로 사용됩니다.",
  "difficulty": "easy",
  "category": "데이터 조회"
},
{
  "id": 7,
  "question": "테이블의 모든 행을 삭제하는 SQL 명령어는?",
  "options": ["DELETE", "TRUNCATE", "REMOVE", "CLEAR"],
  "correctAnswer": 1,
  "hint": "TRUNCATE TABLE 테이블명 형식으로 사용되며, 테이블 구조는 남아있습니다.",
  "difficulty": "easy",
  "category": "데이터 조작"
},
{
  "id": 8,
  "question": "SQL에서 열의 이름을 변경하는 명령어는?",
  "options": ["CHANGE", "RENAME", "ALTER", "MODIFY"],
  "correctAnswer": 1,
  "hint": "ALTER TABLE 테이블명 RENAME COLUMN 기존열명 TO 새로운열명 형식으로 사용됩니다.",
  "difficulty": "easy",
  "category": "데이터 정의"
},
{
  "id": 9,
  "question": "SQL에서 조건이 참일 때 수행되는 절은?",
  "options": ["IF", "WHEN", "CASE", "WHERE"],
  "correctAnswer": 2,
  "hint": "CASE WHEN 조건 THEN 결과 형식으로 사용됩니다.",
  "difficulty": "easy",
  "category": "기본 문법"
},
{
  "id": 10,
  "question": "SQL에서 NULL 값을 대체하는 함수는?",
  "options": ["ISNULL", "NVL", "COALESCE", "IFNULL"],
  "correctAnswer": 1,
  "hint": "NVL(표현식, 대체값) 형식으로 사용되며, NULL 값을 대체합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 11,
  "question": "SQL에서 숫자의 합계를 계산하는 함수는?",
  "options": ["SUM", "TOTAL", "ADD", "AGGREGATE"],
  "correctAnswer": 0,
  "hint": "SUM(열명) 형식으로 사용되며, 숫자의 합계를 계산합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 12,
  "question": "SQL에서 평균을 계산하는 함수는?",
  "options": ["AVERAGE", "MEAN", "MEDIAN", "AVG"],
  "correctAnswer": 3,
  "hint": "AVG(열명) 형식으로 사용되며, 평균을 계산합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 13,
  "question": "SQL에서 행 수를 계산하는 함수는?",
  "options": ["COUNT", "NUMBER", "SUM", "TALLY"],
  "correctAnswer": 0,
  "hint": "COUNT(*) 형식으로 사용되며, 행의 수를 셉니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 14,
  "question": "SQL에서 가장 큰 값을 찾는 함수는?",
  "options": ["MAXIMUM", "GREATEST", "LARGEST", "MAX"],
  "correctAnswer": 3,
  "hint": "MAX(열명) 형식으로 사용되며, 가장 큰 값을 찾습니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 15,
  "question": "SQL에서 가장 작은 값을 찾는 함수는?",
  "options": ["MINIMUM", "LEAST", "SMALLEST", "MIN"],
  "correctAnswer": 3,
  "hint": "MIN(열명) 형식으로 사용되며, 가장 작은 값을 찾습니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 16,
  "question": "SQL에서 문자를 대문자로 변환하는 함수는?",
  "options": ["UPPERCASE", "UPPER", "TOUPPER", "CAPITALIZE"],
  "correctAnswer": 1,
  "hint": "UPPER(문자열) 형식으로 사용되며, 문자를 대문자로 변환합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 17,
  "question": "SQL에서 문자를 소문자로 변환하는 함수는?",
  "options": ["LOWERCASE", "LOWER", "TOLOWER", "UNCAPITALIZE"],
  "correctAnswer": 1,
  "hint": "LOWER(문자열) 형식으로 사용되며, 문자를 소문자로 변환합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 18,
  "question": "SQL에서 문자열의 길이를 반환하는 함수는?",
  "options": ["LENGTH", "LEN", "SIZE", "CHARCOUNT"],
  "correctAnswer": 0,
  "hint": "LENGTH(문자열) 형식으로 사용되며, 문자열의 길이를 반환합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 19,
  "question": "SQL에서 문자열을 다른 문자열로 대체하는 함수는?",
  "options": ["REPLACE", "SUBSTITUTE", "SWAP", "CHANGE"],
  "correctAnswer": 0,
  "hint": "REPLACE(문자열, 기존문자, 새로운문자) 형식으로 사용되며, 문자열을 대체합니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 20,
  "question": "SQL에서 현재 날짜와 시간을 반환하는 함수는?",
  "options": ["NOW", "GETDATE", "SYSDATE", "CURRENT_TIMESTAMP"],
  "correctAnswer": 2,
  "hint": "SYSDATE 형식으로 사용되며, 현재 날짜와 시간을 반환합니다.",
  "difficulty": "easy",
  "category": "함수"
}
,
{
  "id": 21,
  "question": "SQL에서 서브쿼리를 작성할 때 사용하는 키워드는?",
  "options": ["SUBQUERY", "NESTED", "INNER", "WITH"],
  "correctAnswer": 3,
  "hint": "**WITH 절**을 사용하여 서브쿼리를 별도의 부분 쿼리로 정의하고, **주 쿼리**와 연결하여 데이터를 추출할 수 있습니다.",
  "difficulty": "easy",
  "category": "서브쿼리"
},
{
  "id": 22,
  "question": "SQL에서 테이블의 데이터를 삭제하는 명령어는?",
  "options": ["DELETE", "CLEAR", "DROP", "ERASE"],
  "correctAnswer": 2,
  "hint": "DDL 중 하나인 **DELETE** 명령어를 사용하면 테이블의 데이터를 삭제하면서 테이블 구조는 유지됩니다.",
  "difficulty": "easy",
  "category": "데이터 조작"
},
{
  "id": 23,
  "question": "SQL에서 날짜의 차이를 계산하는 함수는?",
  "options": ["DATEDIFF", "DATEGAP", "DAYS_BETWEEN", "DATE_DIFF"],
  "correctAnswer": 0,
  "hint": "**DATEDIFF** 함수를 사용하여 두 날짜 간의 **일수** 차이를 계산할 수 있습니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 24,
  "question": "SQL에서 중첩된 SELECT 문을 포함하는 절은?",
  "options": ["INNER SELECT", "SUBQUERY", "NESTED SELECT", "SELECT IN"],
  "correctAnswer": 1,
  "hint": "**FROM** 절 안에 **서브쿼리**를 포함하여 여러 테이블 또는 뷰의 데이터를 조합하거나 계산하여 결과를 얻을 수 있습니다.",
  "difficulty": "easy",
  "category": "서브쿼리"
},
{
  "id": 25,
  "question": "SQL에서 특정 조건을 만족하는 첫 번째 행을 반환하는 함수는?",
  "options": ["FIRST", "TOP", "LIMIT", "ROWNUM"],
  "correctAnswer": 3,
  "hint": "**ROWNUM** 함수와 **WHERE** 절을 함께 사용하여 특정 조건을 만족하는 **첫 번째 행**만 선택하여 반환할 수 있습니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 26,
  "question": "SQL에서 데이터를 정렬하는 키워드는?",
  "options": ["ORDER BY", "SORT BY", "ARRANGE BY", "SEQUENCE BY"],
  "correctAnswer": 0,
  "hint": "**ORDER BY** 키워드를 사용하여 조회 결과를 특정 열 기준으로 **오름차순** 또는 **내림차순**으로 정렬할 수 있습니다.",
  "difficulty": "easy",
  "category": "데이터 조회"
},
{
  "id": 27,
  "question": "SQL에서 기본 키 제약 조건을 정의하는 키워드는?",
  "options": ["PRIMARY KEY", "UNIQUE KEY", "FOREIGN KEY", "KEY"],
  "correctAnswer": 0,
  "hint": "**PRIMARY KEY** 제약 조건을 사용하여 테이블에서 **중복되지 않고 고유한 값**을 가진 열을 정의할 수 있습니다.",
  "difficulty": "easy",
  "category": "데이터 정의"
},
  {
    "id": 28,
    "question": "SQL에서 외래 키 제약 조건을 정의하는 키워드는?",
    "options": ["PRIMARY KEY", "UNIQUE KEY", "FOREIGN KEY", "KEY"],
    "correctAnswer": 2,
    "hint": "FOREIGN KEY 제약 조건을 사용하여 참조 테이블의 기본 키와 연결된 열을 정의하여 두 테이블 간의 데이터 무결성을 유지할 수 있습니다. 즉, 참조 테이블에 존재하는 값만 외래 키 열에 입력될 수 있도록 제한합니다.",
    "difficulty": "easy",
    "category": "데이터 정의"
  },
  {
    "id": 29,
    "question": "SQL에서 열의 데이터 형식을 변경하는 키워드는?",
    "options": ["MODIFY", "CHANGE", "ALTER", "UPDATE"],
    "correctAnswer": 2,
    "hint": "**ALTER TABLE** 명령어와 **MODIFY COLUMN** 절을 사용하여 기존 열의 **데이터 형식**을 변경할 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 정의"
  },
  {
    "id": 30,
    "question": "SQL에서 두 테이블을 합치는 데 사용되는 절은?",
    "options": ["MERGE", "JOIN", "UNION", "COMBINE"],
    "correctAnswer": 2,
    "hint": "**JOIN** 절을 사용하여 두 테이블의 **관련된 레코드**를 기준으로 연결하여 새로운 결과 테이블을 만들 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 조회"
  },
  {
    "id": 31,
    "question": "SQL에서 집계 함수의 결과에 조건을 지정하는 절은?",
    "options": ["WHERE", "HAVING", "ON", "FILTER"],
    "correctAnswer": 1,
    "hint": "**HAVING** 절을 사용하여 **집계 함수**의 결과에 대한 **조건**을 추가하여 특정 그룹만 선택하여 표시할 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 조회"
  },
  {
    "id": 32,
    "question": "SQL에서 테이블의 이름을 변경하는 명령어는?",
    "options": ["RENAME", "ALTER", "MODIFY", "CHANGE"],
    "correctAnswer": 0,
    "hint": "**ALTER TABLE** 명령어와 **RENAME TO** 절을 사용하여 테이블의 **이름**을 변경할 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 정의"
  },
  {
    "id": 33,
    "question": "SQL에서 데이터베이스의 이름을 변경하는 명령어는?",
    "options": ["RENAME DATABASE", "ALTER DATABASE", "CHANGE DATABASE", "UPDATE DATABASE"],
    "correctAnswer": 1,
    "hint": "**ALTER DATABASE** 명령어와 **RENAME TO** 절을 사용하여 데이터베이스의 **이름**을 변경할 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 정의"
  },
  {
    "id": 34,
    "question": "SQL에서 열의 데이터 형식을 지정하는 키워드는?",
    "options": ["TYPE", "FORMAT", "DATA TYPE", "COLUMN TYPE"],
    "correctAnswer": 2,
    "hint": "**DATA TYPE** 키워드를 사용하여 열에 저장될 데이터의 **형식**을 정의할 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 정의"
  },
  {
    "id": 35,
    "question": "SQL에서 기본값을 설정하는 키워드는?",
    "options": ["DEFAULT", "SET", "VALUE", "INITIAL"],
    "correctAnswer": 0,
    "hint": "**DEFAULT** 키워드를 사용하여 열에 삽입될 때 사용되는 **기본값**을 설정할 수 있습니다.",
    "difficulty": "easy",
    "category": "데이터 정의"
  },
  {
    "id": 36,
    "question": "SQL에서 사용자가 정의한 함수를 작성할 때 사용하는 키워드는?",
    "options": ["USER FUNCTION", "UDF", "CREATE FUNCTION", "MAKE FUNCTION"],
    "correctAnswer": 2,
    "hint": "**CREATE FUNCTION** 명령어를 사용하여 **사용자 정의 함수**를 만들고, 원하는 논리를 구현하여 데이터 처리를 자동화할 수 있습니다.",
    "difficulty": "easy",
    "category": "함수"
  },
{
"id": 37,
"question": "SQL에서 트랜잭션을 시작하는 명령어는?",
"options": ["START TRANSACTION", "BEGIN TRANSACTION", "OPEN TRANSACTION", "INIT TRANSACTION"],
"correctAnswer": 1,
"hint": "BEGIN TRANSACTION 명령어를 사용하여 트랜잭션을 시작하고 데이터 변경 작업을 하나의 논리적 단위로 묶습니다. 트랜잭션 내에서 발생한 모든 작업은 성공하거나 실패해야 하며, 부분적인 변경은 허용되지 않습니다.",
"difficulty": "easy",
"category": "트랜잭션"
},
{
"id": 38,
"question": "SQL에서 트랜잭션을 종료하고 변경 사항을 저장하는 명령어는?",
"options": ["END", "COMMIT", "SAVE", "FINISH"],
"correctAnswer": 1,
"hint": "COMMIT 명령어를 사용하여 트랜잭션 내에서 수행된 모든 데이터 변경 작업을 영구적으로 저장합니다. COMMIT 이후에는 변경 사항을 되돌릴 수 없습니다. 주의해서 사용해야 합니다.",
"difficulty": "easy",
"category": "트랜잭션"
},
{
"id": 39,
"question": "SQL에서 트랜잭션을 종료하고 변경 사항을 취소하는 명령어는?",
"options": ["ROLLBACK", "CANCEL", "REVERT", "UNDO"],
"correctAnswer": 0,
"hint": "ROLLBACK 명령어를 사용하여 트랜잭션 내에서 수행된 모든 데이터 변경 작업을 취소하고 이전 상태로 되돌립니다. COMMIT 이후 발생한 변경 사항만 취소할 수 있으며, COMMIT 이전의 변경 사항은 영향을 받지 않습니다.",
"difficulty": "easy",
"category": "트랜잭션"
},
{
"id": 40,
"question": "SQL에서 기본 키 제약 조건을 제거하는 명령어는?",
"options": ["REMOVE PRIMARY KEY", "DROP PRIMARY KEY", "DELETE PRIMARY KEY", "ALTER PRIMARY KEY"],
"correctAnswer": 1,
"hint": "ALTER TABLE 명령어와 DROP CONSTRAINT 절을 사용하여 테이블에서 기본 키 제약 조건을 제거할 수 있습니다. 주의해야 할 점은 기본 키를 제거하면 테이블의 데이터 무결성이 위협될 수 있다는 것입니다. 충분한 검토 후 신중하게 사용해야 합니다.",
"difficulty": "easy",
"category": "데이터 정의"
},
{
  "id": 41,
  "question": "SQL에서 테이블의 데이터를 조회할 때 사용되는 키워드는?",
  "options": ["SELECT", "SHOW", "DISPLAY", "FETCH"],
  "correctAnswer": 0,
  "hint": "SELECT 명령어를 사용하여 테이블에서 데이터를 선택하고 조회합니다.",
  "difficulty": "easy",
  "category": "데이터 조회"
},
{
  "id": 42,
  "question": "SQL에서 특정 열의 값이 NULL인지 확인하는 조건은?",
  "options": ["IS NULL", "EQUALS NULL", "IS EMPTY", "IS BLANK"],
  "correctAnswer": 0,
  "hint": "WHERE 절에서 IS NULL 조건을 사용하여 열의 값이 NULL인지 확인합니다.",
  "difficulty": "easy",
  "category": "데이터 조회"
},
{
  "id": 43,
  "question": "SQL에서 모든 값을 반환하는 집합 연산자는?",
  "options": ["UNION", "UNION ALL", "INTERSECT", "MINUS"],
  "correctAnswer": 1,
  "hint": "UNION ALL 연산자는 중복된 값을 포함하여 모든 값을 반환합니다.",
  "difficulty": "easy",
  "category": "집합 연산"
},
{
  "id": 44,
  "question": "SQL에서 두 집합의 공통된 값을 반환하는 연산자는?",
  "options": ["UNION", "UNION ALL", "INTERSECT", "MINUS"],
  "correctAnswer": 2,
  "hint": "INTERSECT 연산자는 두 집합에서 공통된 값을 반환합니다.",
  "difficulty": "easy",
  "category": "집합 연산"
},
{
  "id": 45,
  "question": "SQL에서 두 집합의 차이를 반환하는 연산자는?",
  "options": ["UNION", "UNION ALL", "INTERSECT", "MINUS"],
  "correctAnswer": 3,
  "hint": "MINUS 연산자는 첫 번째 집합에서 두 번째 집합을 제외한 차이를 반환합니다.",
  "difficulty": "easy",
  "category": "집합 연산"
},
{
  "id": 46,
  "question": "SQL에서 조건에 따라 서로 다른 값을 반환하는 함수는?",
  "options": ["IF", "CASE", "DECODE", "SWITCH"],
  "correctAnswer": 2,
  "hint": "DECODE 함수는 조건에 따라 서로 다른 값을 반환합니다. DECODE(표현식, 조건1, 결과1, 조건2, 결과2, ...) 형식으로 사용됩니다.",
  "difficulty": "easy",
  "category": "함수"
},
{
  "id": 47,
  "question": "SQL에서 테이블의 데이터와 관련된 데이터를 저장하는 것은?",
  "options": ["VIEW", "INDEX", "SEQUENCE", "TRIGGER"],
  "correctAnswer": 1,
  "hint": "INDEX는 테이블의 데이터를 빠르게 검색할 수 있도록 도와주는 데이터 구조입니다.",
  "difficulty": "easy",
  "category": "데이터베이스 객체"
},
{
  "id": 48,
  "question": "SQL에서 일련 번호를 생성하는 객체는?",
  "options": ["SEQUENCE", "INDEX", "VIEW", "TRIGGER"],
  "correctAnswer": 0,
  "hint": "SEQUENCE는 자동으로 증가하는 일련 번호를 생성합니다.",
  "difficulty": "easy",
  "category": "데이터베이스 객체"
},
{
  "id": 49,
  "question": "SQL에서 데이터베이스를 복구하는 명령어는?",
  "options": ["RECOVER", "RESTORE", "REBUILD", "REPAIR"],
  "correctAnswer": 1,
  "hint": "RESTORE 명령어는 데이터베이스를 백업 상태로 복구합니다.",
  "difficulty": "easy",
  "category": "데이터베이스 관리"
},
{
  "id": 50,
  "question": "SQL에서 트랜잭션의 일관성을 보장하는 명령어는?",
  "options": ["COMMIT", "ROLLBACK", "SAVEPOINT", "CHECKPOINT"],
  "correctAnswer": 2,
  "hint": "SAVEPOINT 명령어는 트랜잭션 내에서 특정 시점으로 롤백할 수 있는 저장 지점을 설정합니다.",
  "difficulty": "easy",
  "category": "트랜잭션"
}
]